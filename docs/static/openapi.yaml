openapi: 3.0.0

info:
  title: "Barchart Alerting Service"
  description: "Define and manage alert conditions and notifications using Barchart's REST-ful web service"
  version: 4.19.0

servers:
  - description: "Demo (evaluation and testing only)"
    url: "https://alerts-management-demo.barchart.com"
  - description: "Production"
    url: "https://alerts-management-prod.barchart.com"

components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: The JWT authorization

  schemas:
    Alert:
      type: object
      properties:
        alert_id:
          type: string
          format: uuid
          example: "39b633bf-8993-491d-b544-bdc9deed60be"
        alert_state:
          type: string
          example: "Inactive"
        alert_system:
          type: string
          example: "barchart.com"
        alert_state_key:
          type: string
          nullable: true
          example: "abcdef"
        alert_type:
          type: string
          nullable: true
          example: "price"
        alert_behavior:
          type: string
          example: "Terminate"
        user_id:
          type: string
          example: "barchart-test-user"
        name:
          type: string
          example: "Buy TSLA"
        user_notes:
          type: string
          nullable: true
          example: "Time to buy Tesla Motors stock"
        system_notes:
          type: object
          example: {}
        create_date:
          type: string
          example: "1453673000873"
        last_trigger_date:
          type: string
          nullable: true
          example: "145367399999"
        last_start_date:
          type: string
          nullable: true
          example: "145367399999"
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'
        publishers:
          type: array
          items:
            $ref: '#/components/schemas/Publisher'
        tracking_server_id:
          type: integer # ???
          nullable: true
        schedules: # ???
          type: array
          items:
            additionalProperties: {}
            example: []
        effectivePublishers:
          type: array
          items:
            $ref: '#/components/schemas/Publisher'

    Publisher:
      type: object
      description: A "publisher" defines the rules for notification once an alert has been triggered. An alert can have multiple publishers.
      properties:
        publisher_id:
          type: string
          format: uuid
          example: "9c864a19-ce77-4a87-8cd6-e0810ecb120e"
        use_default_recipient:
          type: boolean
          example: false
        recipient:
          type: string
          example: "123-456-7890"
        format:
          type: string
          example: "It is a good time to buy Tesla stock."
        timing:
          type: object
          properties:
            timezon:
              type: string
              example: "America/Chicago"
        type:
          type: object
          properties:
            publisher_type_id:
              type: integer
              example: 1
            transport:
              type: string
              example: "sms"
            provider:
              type: string
              example: "twilio"

    Operator:
      type: object
      properties:
        operator_id:
          type: integer
          example: 4
        operator_type:
          type: string
          example: binary
        operator_name:
          type: string
          example: is-indicator
        operand_options:
          type: array
          items:
            type: string
            example: ["Buy", "Sell", "Hold"]
        operand_literal:
          type: boolean
          example: true
        operand_display:
          type: string
          example: "10"
        operand:
          type: string
          example: "10"
        display:
          type: object
          properties:
            short:
              type: string
              example: ">"
            medium:
              type: string
              example: "greater than"
            long:
              type: string
              example: "greater than"
        modifiers:
          type: array
          items:
            type: integer
          example: [1,2,3]

    Condition:
      type: object
      properties:
        condition_id:
          type: string
          format: uuid
          example: "38a3f731-0f87-40b7-a33b-dd9c792998e2"
        name:
          type: string
          example: "Gap Down is greater than 10.00"
        operator:
          $ref: '#/components/schemas/Operator'
        property:
          $ref: '#/components/schemas/Property'
        templates:
          type: object
          properties:
            condition:
              type: string
              example: "Gap Down is greater than {{{operator.format.operand}}}"
            trigger:
              type: object
              properties:
                email:
                  type: string
                  example: "Gap Down is {{{event.format.gapDown}}}"
                sms:
                  type: string
                  example: "Gap Down for {{{property.target.identifier}}} is {{{event.format.gapDown}}}"

    Property:
      description: A "property" refers to an attribute of a target. The value of a "property" can be checked using an "operator" object.
      type: object
      properties:
        property_id:
          type: integer
          example: 18
        type:
          type: string
          example: number
        format:
          type: string
          example: "0,0.00"
        group:
          type: string
          example: "Technical"
        accessor:
          type: array
          items:
            type: string
            example: "gapDown"
        category:
          type: array
          items:
            type: string
            example: "Gap & Range Change"
        description:
          type: array
          items:
            type: string
            example: "Gap Down"
        descriptionShort:
          type: array
          items:
            type: string
            example: "Gap Down"
        target:
          $ref: '#/components/schemas/Target'
        valid_operators:
          type: array
          items:
            type: integer
            example: 44
        sortOrder:
          type: integer
          example: 912

    Target:
      type: object
      description: A "target" refers to a type of object which can be observed. Each target has one or more properties.
      required:
        - type
        - description
        - target_id
        - identifier_description
      properties:
        description:
          type: string
          example: "basic"
        display:
          type: string # ???
          nullable: true
        identifier:
          type: string
          example: "TSLA"
        identifier_description:
          type: string
          example: "symbol"
        qualifier_descriptions:
          type: array
          items:
            type: string
            example: ["location", "delivery date"]
        kind:
          type: string # ???
          nullable: true
        target_id:
          type: integer
          example: 1
        type:
          type: string
          example: "symbol"

    Template:
      type: object
      properties:
        template_id:
          type: string
          format: uuid
          example: "39b633bf-8993-491d-b544-bdc9deed60be"
        alert_system:
          type: string
        user_id:
          type: string
          example: "barchart-test-user"
        name:
          type: string
          example: "Example template"
        create_date:
          type: string
          example: "1453673000873"
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'

    TemplateCondition:
      type: object
      description: A "Condition" without target.
      properties:
        template_condition_id:
          type: string
          format: uuid
          example: "38a3f731-0f87-40b7-a33b-dd9c792998e2"
        operator:
          $ref: '#/components/schemas/Operator'
        property:
          $ref: '#/components/schemas/Property'
        templates:
          type: object
          properties:
            condition:
              type: string
              example: "Gap Down is greater than {{{operator.format.operand}}}"
            trigger:
              type: object
              properties:
                email:
                  type: string
                  example: "Gap Down is {{{event.format.gapDown}}}"
                sms:
                  type: string
                  example: "Gap Down for {{{property.target.identifier}}} is {{{event.format.gapDown}}}"

    Trigger:
      type: object
      description: An alert trigger status shows status of alert trigger.
      required:
        - alert_id
        - alert_system
        - alert_name
        - user_id
        - trigger_date
        - trigger_status
        - trigger_status_date
        - trigger_description
        - trigger_title
      properties:
        alert_id:
          type: string
          format: uuid
          example: "b78b30e3-8af5-48a5-8998-0989269ad9d0"
        alert_name:
          type: string
          example: "Last greater than 200.00"
        alert_system:
          type: string
          example: "barchart.com"
        user_id:
          type: string
          example: "barchart-test-user"
        trigger_date:
          type: string
          example: "1605874379489"
        trigger_status:
          type: string
          example: "Read"
        trigger_status_date:
          type: string
          example: "1606227202480"
        trigger_title:
          type: string
          example: "MSFT"
        trigger_description:
          type: string
          example: "MSFT traded for 214.86 at 10:34 ET on 12/14/20"
        trigger_additional_data:
          type: object
          properties: 
            type:
              type: string
              example: "news"
            data:
              type: object
              properties: 
                url:
                  type: string
                  example: "https://barchart.com/story/stocks/quotes/TSLA/news/1085745/view"

  responses:
    Unauthorized:
      description: The unauthorized access.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "unauthorized"

paths:
  /server/version:
    get:
      summary: Get Server Version.
      description: Retrieves the current server version.
      tags:
        - System
      responses:
        '200':
          description: A JSON document, containing a single attribute called semver.
          content:
            application/json:
              schema:
                type: object
                properties:
                  semver:
                    type: string
                    example: "3.1.37"

  /alerts:
    post:
      summary: Create Alert.
      description: Creates a new alert.
      tags:
        - Alerts
      security:
        - JWT: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - alert_system
                - conditions
              properties:
                name:
                  type: string
                  example: "Buy TSLA"
                user_id:
                  type: string
                  example: "me"
                alert_behavior:
                  type: string
                  example: "terminate"
                alert_system:
                  type: string
                  example: "barchart.com"
                alert_type:
                  type: string
                  example: "price"
                user_notes:
                  type: string
                  example: "Time to buy Tesla Motors stock"
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      property:
                        type: object
                        properties:
                          property_id:
                            type: integer
                            example: 1
                          target:
                            type: object
                            properties:
                              identifier:
                                type: string
                                example: AAPL
                      operator:
                        type: object
                        properties:
                          operator_id:
                            type: integer
                            example: 3
                          operand:
                            type: string
                            example: "99"
                publishers:
                  type: array
                  items:
                    type: object
                    properties:
                      publisher_id:
                        type: string
                        format: uuid
                        example: "9c864a19-ce77-4a87-8cd6-e0810ecb120e"
                      use_default_recipient:
                        type: boolean
                        example: false
                      recipient:
                        type: string
                        example: "123-456-7890"
                      format:
                        type: string
                        example: "It is a good time to buy Telsa stock."
                      type:
                        type: object
                        properties:
                          publisher_type_id:
                            type: integer
                            example: 1
                schedules:
                  type: array
                  items:
                    additionalProperties: {}
                  example: []
      responses:
        '200':
          description: A JSON document, conforming to the alert schema, representing the newly created alert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'

        '500':
          description: The reason for the failure, which is typically caused by POST data that does not conform the the alert schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The argument [ query.user_id ] must be a [ string ]"

        '401':
          $ref: '#/components/responses/Unauthorized'

  /alerts/{alert_id}:
    get:
      summary: Retrieve Alert.
      description: Retrieves an existing alert.
      tags:
        - Alerts
      security:
        - JWT: []
      parameters:
        - name: alert_id
          description: The UUID for the alert.
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "6bc32e9d-50ba-4f26-a633-a3cb3884b504"
      responses:
        '200':
          description: "A JSON document, conforming to the alert schema, representing requested alert."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'

        '404':
          description: "The alert does not exist."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "no data"

    delete:
      summary: "Delete Alert"
      description: "Deletes an existing alert, stopping it, if necessary."
      tags:
        - Alerts
      security:
        - JWT: []
      parameters:
        - name: alert_id
          in: path
          description: "The UUID for the alert"
          required: true
          schema:
            type: string
            format: uuid
            example: "6bc32e9d-50ba-4f26-a633-a3cb3884b504"
      responses:
        200:
          description: "A JSON document, conforming to the alert schema, representing the deleted alert."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'

        '500':
          description: "The alert does not exist."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Alert could not be deleted."

    put:
      summary: "Start/Stop Alert."
      description: "Starts or stops an alert."
      tags:
        - Alerts
      security:
        - JWT: []
      parameters:
        - name: alert_id
          in: path
          required: true
          description: "The UUID for the alert"
          schema:
            type: string
            format: uuid
            example: "6bc32e9d-50ba-4f26-a633-a3cb3884b504"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                alert_id:
                  type: string
                  format: uuid
                  example: "6bc32e9d-50ba-4f26-a633-a3cb3884b504"
                alert_state:
                  type: string
                  example: "Starting"
      responses:
        '200':
          description: "A JSON document, conforming to the alert schema. The response will not be returned until the alert has started (or stopped)."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'

        '404':
          description: "The alert does not exist."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "no data"

        '500':
          description: "The alert cannot be started (e.g. you are attempting to start an alert that has already been started)."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /alerts/users/{alert_system}/{user_id}:
    get:
      summary: "Retrieve Alerts For User."
      description: "Retrieves all alerts for a single user."
      tags:
        - Alerts
      security:
        - JWT: []
      parameters:
        - name: user_id
          required: true
          in: path
          description: "The unique identifier of the user (in the :alert_system)"
          schema:
            type: string

        - name: alert_system
          required: true
          in: path
          description: The name of the user's system (e.g. "barchart.com" or "grains.com")
          schema:
            type: string
      responses:
        '200':
          description: A JSON document, containing an array of alert objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'

        '500':
          description: A JSON document, containing an error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    put:
      summary: "Start/Stop Multiple Alerts For User"
      description: "Starts or stops an zero to many alerts for a single user."
      tags:
        - Alerts
      security:
        - JWT: []
      parameters:
        - name: user_id
          required: true
          in: path
          description: "The unique identifier of the user (in the :alert_system)"
          schema:
            type: string

        - name: alert_system
          required: true
          in: path
          description: The name of the user's system (e.g. "barchart.com" or "grains.com")
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                alert_id:
                  type: string
                  format: uuid
                  example: "6bc32e9d-50ba-4f26-a633-a3cb3884b504"
                alert_state:
                  type: string
                  example: "Starting"
                user_id:
                  type: string
                  format: uuid
                  example: "6bc32e9d-50ba-4f26-a633-a3cb3884b504"
      responses:
        '200':
          description: A JSON document, containing an array of alert objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'

        '500':
          description: A JSON document, containing an error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /alerts/users/{alert_system}/{user_id}/{alert_system_key}:
    get:
      summary: "Retrieve Alerts By Remote System Key"
      description: Retrieves all alerts, for a single user, which have a specific "alert_system_key" property value.
      tags:
        - Alerts
      security:
        - JWT: []
      parameters:
        - name: user_id
          in: path
          required: true
          description: "The unique identifier of the user (in the :alert_system)"
          schema:
            type: string

        - name: alert_system
          in: path
          required: true
          description: The name of the user's system (e.g. "barchart.com" or "grains.com")
          schema:
            type: string

        - name: alert_system_key
          in: path
          required: true
          description: "The key (specified by the remote system at creation) to match"
          schema:
            type: string

      responses:
        '200':
          description: "A JSON document, containing an array of alert objects."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
        '500':
          description: A JSON document, containing an error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /templates/users/{alert_system}/{user_id}:
    get:
      summary: "Retrieve Templates For User."
      description: "Retrieves all templates for a single user."
      tags:
        - Templates
      security:
        - JWT: [ ]
      parameters:
        - name: user_id
          required: true
          in: path
          description: "The unique identifier of the user (in the :alert_system)"
          schema:
            type: string

        - name: alert_system
          required: true
          in: path
          description: The name of the user's system (e.g. "barchart.com" or "grains.com")
          schema:
            type: string
      responses:
        '200':
          description: A JSON document, containing an array of template objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'

        '500':
          description: A JSON document, containing an error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /templates/{template_id}:
    delete:
      summary: "Delete Template"
      description: "Deletes an existing template, stopping it, if necessary."
      tags:
        - Templates
      security:
        - JWT: [ ]
      parameters:
        - name: template_id
          in: path
          description: "The UUID for the template"
          required: true
          schema:
            type: string
            format: uuid
            example: "6bc32e9d-50ba-4f26-a633-a3cb3884b504"
      responses:
        200:
          description: "A JSON document, conforming to the alert schema, representing the deleted template."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'

        '500':
          description: "The template does not exist."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Template could not be deleted."

  /templates:
    post:
      summary: Create Template.
      description: Creates a new template.
      tags:
        - Template
      security:
        - JWT: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - alert_system
                - conditions
              properties:
                name:
                  type: string
                  example: "Example template"
                user_id:
                  type: string
                  example: "me"
                alert_system:
                  type: string
                  example: "barchart.com"
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      property:
                        type: object
                        properties:
                          property_id:
                            type: integer
                            example: 1
                      operator:
                        type: object
                        properties:
                          operator_id:
                            type: integer
                            example: 3
                          operand:
                            type: string
                            example: "99"
      responses:
        '200':
          description: A JSON document, conforming to the alert schema, representing the newly created template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'

        '500':
          description: The reason for the failure, which is typically caused by POST data that does not conform the the template schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The argument [ query.user_id ] must be a [ string ]"

        '401':
          $ref: '#/components/responses/Unauthorized'

  /alert/market/configuration/{alert_system}/{user_id}:
    get:
      summary: "Retrieve Market Data Configuration For User"
      description: "Retrieves default publishing information for a single user."
      tags:
        - Market
      security:
        - JWT: []
      parameters:
        - name: alert_system
          in: path
          required: true
          description: The name of the user's system (e.g. "barchart.com" or "grains.com")
          schema:
            type: string

        - name: user_id
          in: path
          required: true
          description: "The unique identifier of the user (in the :alert_system)"
          schema:
            type: string
      responses:
        200:
          description: "A JSON document that conforms to the market-data-configuration schema."
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                  - alert_system
                properties:
                  alert_system:
                    type: string
                    example: "barchart.com"
                  user_id:
                    type: string
                  configuration_id:
                    type: string
                    format: uuid
                    example: "6bc32e9d-50ba-4f26-a633-a3cb3884b504"
                  market_data_id:
                    type: string
                    example: "bri"

  /alert/targets:
    get:
      summary: "Retrieve Targets"
      description: "Retrieves a list of valid targets."
      tags:
        - Targets
      responses:
        200:
          description: "A JSON document containing an array of targets, conforming to the target schema."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Target'

  /alert/targets/properties:
    get:
      summary: "Retrieve Properties"
      description: "Retrieves a list of valid properties (of targets)."
      tags:
        - Targets
      responses:
        200:
          description: "A JSON document containing an array of properties, conforming to the property schema."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'

  /alert/operators:
    get:
      summary: "Retrieve Operators"
      description: "Retrieves a list of operators (for use in conjunction with properties)."
      tags:
        - Operators
      responses:
        200:
          description: "A JSON document containing an array of operators, conforming to the operator schema."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'

  /alert/modifiers:
    get:
      summary: "Retrieve Modifiers"
      description: "Retrieves a list of modifiers (for use in conjunction with properties)."
      tags:
        - Modifiers
      responses:
        200:
          description: "A JSON document containing an array of modifiers, conforming to the modifier schema."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    modifier_id:
                      type: string
                      example: 3
                    name:
                      type: string
                      example: "convert-price-currency"
                    display:
                      type: string
                      example: "convert price currency"
                    display_short:
                      type: string
                      example: "convert price currency"
                    type:
                      type: string
                      example: "string"
                    format:
                      type: string
                      nullable: true
                      example: "0.00%"
                    operand_index:
                      type: integer
                      example: 0
                    target_types:
                      type: array
                      items:
                        type: string
                      example: ["number", "percent"]

  /alert/publishers:
    get:
      summary: "Retrieve Publisher Types"
      description: "Retrieves a list of publishers."
      tags:
        - Publishers
      responses:
        200:
          description: "A JSON document containing an array of publisher types, conforming to the publisher-type schema."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    publisher_type_id:
                      type: integer
                      example: 1
                    transport:
                      type: string
                      example: "sms"
                    provider:
                      type: string
                      example: "twilio"

  /alert/publishers/default/{alert_system}/{user_id}:
    get:
      summary: "Retrieve Publisher Type Defaults For User"
      description: "Retrieves default publishing information for a single user."
      tags:
        - Publishers
      security:
        - JWT: []
      parameters:
        - name: alert_system
          in: path
          required: true
          description: The name of the user's system (e.g. "barchart.com" or "grains.com")
          schema:
            type: string

        - name: user_id
          in: path
          required: true
          description: The unique identifier of the user (in the :alert_system)
          schema:
            type: string
      responses:
        200:
          description: "A JSON document, containing an array of publisher-type-default objects."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    publisher_type_id:
                      type: integer
                      example: 1
                    transport:
                      type: string
                      example: "sms"
                    provider:
                      type: string
                      example: "twilio"
                    user_id:
                      type: string
                    alert_system:
                      type: string
                      example: "barchart.com"
                    default_recipient:
                      type: string
                      example: "2489539701"
                      nullable: true
                    default_recipient_hmac:
                      type: string
                      nullable: true
                      example: "94b6239ae1d309a46163bb1e2f64213170ef201fb3f99ed1908caee899a34d2b"
                    allow_window_timezone:
                      type: string
                      example: "America/Chicago"
                      nullable: true
                    allow_window_start:
                      type: string
                      nullable: true
                      example: "06:00"
                    allow_window_end:
                      type: string
                      nullable: true
                      example: "20:30"
                    active_alert_types:
                      type: array
                      example: ["price"]
                      items:
                        type: string

  /alert/publishers/default/{alert_system}/{user_id}/{publisher_type_id}:
    put:
      summary: "Save Publisher Type Defaults For User"
      description: "Updates default publishing information for a single user."
      tags:
        - Publishers
      security:
        - JWT: []
      parameters:
        - name: user_id
          in: path
          required: true
          description: "The unique identifier of the user (in the :alert_system)"
          schema:
            type: string

        - name: alert_system
          in: path
          required: true
          description: The name of the user's system (e.g. "barchart.com" or "grains.com")
          schema:
            type: string

        - name: publisher_type_id
          in: path
          required: true
          description: "The publisher type to change."
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type:
                array
              items:
                type: object
                properties:
                  publisher_type_id:
                    type: integer
                    example: 1
                  user_id:
                    type: string
                    example: "me"
                  alert_system:
                    type: string
                    example: "barchart.com"
                  default_recipient:
                    type: string
                    example: "2489539701"
                  allow_window_timezone:
                    type: string
                    example: "America/Chicago"
                  allow_window_start:
                    type: string
                    nullable: true
                    example: "06:00"
                  allow_window_end:
                    type: string
                    nullable: true
                    example: "20:30"
                  active_alert_types:
                    type: array
                    example: ["price"]
                    items:
                      type: string

      responses:
        200:
          description: A JSON document, containing the updated publisher-type-default
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    publisher_type_id:
                      type: integer
                      example: 1
                    transport:
                      type: string
                      example: "sms"
                    provider:
                      type: string
                      example: "twilio"
                    user_id:
                      type: string
                    alert_system:
                      type: string
                      example: "barchart.com"
                    default_recipient:
                      type: string
                      example: "2489539701"
                    default_recipient_hmac:
                      type: string
                      nullable: true
                      example: "94b6239ae1d309a46163bb1e2f64213170ef201fb3f99ed1908caee899a34d2b"
                    allow_window_timezone:
                      type: string
                      example: "America/Chicago"
                    allow_window_start:
                      type: string
                      nullable: true
                      example: "06:00"
                    allow_window_end:
                      type: string
                      nullable: true
                      example: "20:30"
                    active_alert_types:
                      type: array
                      example: ["price"]
                      items:
                        type: string

  /alert/triggers/users/{alert_system}/{user_id}:
    get:
      summary: "Retrieve Alert Trigger Statuses"
      description: "Retrieves a list of alerts trigger statuses."
      tags:
        - Triggers
      security:
        - JWT: []
      parameters:
        - name: user_id
          description: The user id.
          in: path
          required: true
          schema:
            type: string
            example: "barchart-test-user"

        - name: alert_system
          description: The alert system.
          in: path
          required: true
          schema:
            type: string
            example: "barchart.com"

        - name: trigger_date
          description: Gets alert trigger statuses after this date
          in: query
          required: false
          schema:
            type: string
            example: "1605874379489"


        - name: trigger_status
          description: Gets triggers with this status
          in: query
          required: false
          schema:
            type: string
            example: "Read"
      responses:
        200:
          description: "A JSON document containing an array of alert trigger statuses"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trigger'

    put:
      summary: "Updates an alert trigger statuses"
      description: "Updates specific alert trigger statuses."
      tags:
        - Triggers
      security:
        - JWT: []
      parameters:
        - name: user_id
          description: The user id.
          in: path
          required: true
          schema:
            type: string
            example: "barchart-test-user"

        - name: alert_system
          description: The alert system.
          in: path
          required: true
          schema:
            type: string
            example: "barchart.com"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                trigger_status:
                  type: string
                  example: "Unread"
      responses:
        '200':
          description: "A JSON document, conforming to the alert trigger status."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /alert/triggers/{alert_id}/{trigger_date}:
    put:
      summary: "Updates an alert trigger statuses"
      description: "Updates all alert trigger status for the user."
      tags:
        - Triggers
      security:
        - JWT: []
      parameters:
        - name: alert_id
          description: The alert id.
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: "d2d4ec4e-f732-422e-801c-4637f1c9f21a"

        - name: trigger_date
          description: The alert system.
          in: path
          required: true
          schema:
            type: string
            example: "1607960061721"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                trigger_status:
                  type: string
                  example: "Unread"
      responses:
        '200':
          description: "A JSON document, conforming to the alert trigger statuses."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trigger'

        '401':
          $ref: '#/components/responses/Unauthorized'
